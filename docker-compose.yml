version: '3'

services:
  keycloak:
    #image: quay.io/keycloak/keycloak:25.0.0
    image: mykeycloak:latest
    environment:
#      DB_VENDOR: POSTGRES
#      DB_ADDR: db
#      DB_DATABASE: keycloak_db
#      DB_USER: postgres
#      DB_SCHEMA: public
#      DB_PASSWORD: 123
      KEYCLOAK_ADMIN: kiiiwi567
      KEYCLOAK_ADMIN_PASSWORD: 20052003aA
    ports:
      - "9090:8080"
    command:
      - start-dev
#    depends_on:
#      - db
  #  db:
  #    image: postgres:15.2
  #    environment:
  #      POSTGRES_HOST_AUTH_METHOD: trust
  #      POSTGRES_USER: postgres
  #      POSTGRES_PASSWORD: 123
  #      POSTGRES_DB: keycloak_db
  #    ports:
  #      - "1235:5432"

################ DB DOCKER #################
  ticketdb:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: ticketdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ticketdb" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"
    volumes:
      - ticketdb-data:/var/lib/postgresql/data
      - ./ticketService/src/main/resources/db/initDB.sql:/docker-entrypoint-initdb.d/initDB.sql
    restart: unless-stopped

  attachmentdb:
      image: postgres:15.2-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123
        POSTGRES_DB: attachmentdb
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d attachmentdb" ]
        interval: 10s
        timeout: 3s
        retries: 3
      ports:
        - "5434:5432"
      volumes:
        - attachmentdb-data:/var/lib/postgresql/data
        - ./attachmentService/src/main/resources/db/initDB.sql:/docker-entrypoint-initdb.d/initDB.sql
      restart: unless-stopped

  userdb:
      image: postgres:15.2-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123
        POSTGRES_DB: userdb
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d userdb" ]
        interval: 10s
        timeout: 3s
        retries: 3
      ports:
        - "5435:5432"
      volumes:
        - userdb-data:/var/lib/postgresql/data
        - ./userService/src/main/resources/db/initDB.sql:/docker-entrypoint-initdb.d/initDB.sql
      restart: unless-stopped

  liquibase:
    build: .
    image: liquibase/liquibase
    volumes:
      - ./ticketService/src/main/resources:/liquibase/changelog/ticketService
      - ./userService/src/main/resources:/liquibase/changelog/userService
      - ./attachmentService/src/main/resources:/liquibase/changelog/attachmentService
    entrypoint: [ "sh", "-c", "until pg_isready -h ticketdb -p 5432; do sleep 2; done && \
                                 until pg_isready -h attachmentdb -p 5432; do sleep 2; done && \
                                 until pg_isready -h userdb -p 5432; do sleep 2; done && \
                                 liquibase --defaultsFile=/liquibase/changelog/ticketService/db/changelog/liquibase.properties update && \
                                 liquibase --defaultsFile=/liquibase/changelog/userService/db/changelog/liquibase.properties update && \
                                 liquibase --defaultsFile=/liquibase/changelog/attachmentService/db/changelog/liquibase.properties update" ]
    depends_on:
      - ticketdb
      - attachmentdb
      - userdb



  ###########################################

#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:7
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    expose:
      - "2181"
  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      expose:
        - "9092"
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
      image: provectuslabs/kafka-ui:latest
      depends_on:
        - kafka
      ports:
        - "9091:8080"
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  ticketdb-data:
  attachmentdb-data:
  userdb-data: